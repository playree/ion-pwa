{"version":3,"sources":["layout/sideMenuLayout.tsx","dexie.ts","helpers/settings.ts","helpers/didTools.ts","pages/top.tsx","pages/did.tsx","pages/settings.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","menulink","textDecorationLine","color","fontWeight","NowLoadingContext","React","SettingsContext","DidContext","useDidContext","SideMenuLayout","useTheme","setOpen","isNowLoading","setNowLoading","settings","setSettings","handleDrawerClose","nowLoadingValue","settingsValue","didValue","didModel","setDidModel","Box","sx","CssBaseline","position","Toolbar","minHeight","IconButton","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","to","style","ListItem","button","ListItemIcon","minWidth","ListItemText","primary","Provider","value","height","paddingX","Backdrop","zIndex","drawer","CircularProgress","id","SettingsModel","key","this","KEYS","URL_OPERATION","URL_RESOLVE","didlong","signingPrivateKey","recoveryPrivateKey","updatePrivateKey","KEY","dexieDb","Dexie","version","stores","did","privatekey","Settings","urlOperation","urlResolve","get","dbUrlOperation","dbUrlResolve","put","load","DidTool","url","signingKeyId","IonKey","generateEs256kOperationKeyPair","recoveryKey","updateKey","generateEs256kDidDocumentKeyPair","signingKey","input","document","publicKeys","createRequest","IonRequest","createCreateRequest","longFormDid","IonDid","createLongFormDid","longFormSuffixData","substring","lastIndexOf","IonProofOfWork","submitIonRequest","urljoin","ACTION_PATH","PROOF","OPERATIONS","JSON","stringify","resText","resObj","parse","didDocument","didParts","split","scheme","didSuffix","length","method","published","didDocumentMetadata","DidModel","fetch","IDENTIFIERS","res","status","text","error","json","ID","PrivateKeyTool","privateKey","PrivateKeyModel","RESERVE_ID","RECOVERY","UPDATE","SIGNING_KEY","join","PageTop","nowLoadingContext","settingsContext","didContext","openDidCreated","setOpenDidCreated","openDialog","setOpenDialog","title","textDialog","setTextDialog","handleCloseDidCreated","event","reason","setup","setTimeout","registerDid","didInfo","save","resolveDid","_resolveDid","resolveDidLong","didLong","resolve","closeDialog","Container","maxWidth","marginTop","Grid","container","item","xs","Button","size","startIcon","Snackbar","autoHideDuration","onClose","Alert","severity","Chip","label","marginBottom","Card","CardContent","TextField","fullWidth","multiline","InputProps","readOnly","fixed","textAlign","marginX","CardActions","Dialog","DialogTitle","DialogContent","maxRows","fontSize","DialogActions","autoFocus","PageDid","signing","recovery","update","privateKeys","setPrivateKeys","Accordion","AccordionSummary","expandIcon","AccordionDetails","replace","PageSettings","setUrlOperation","setUrlResolve","handleChange","e","target","handleClose","saveSettings","then","onChange","App","element","index","path","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2d1c1e93.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Outlet } from 'react-router-dom'\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Drawer, CssBaseline, Toolbar, Typography, Divider, IconButton, \n  List, ListItem, ListItemIcon, ListItemText, Backdrop, CircularProgress } from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport { \n  Menu as IconMenu,\n  ChevronLeft as IconChevronLeft,\n  ChevronRight as IconChevronRight,\n  Home as IconHome,\n  Key as IconKey,\n  Settings as IconSettings \n} from '@mui/icons-material';\nimport { NavLink } from 'react-router-dom';\n\nimport { Settings } from '../helpers/settings';\nimport { DidModel } from '../helpers/didTools';\n\nconst drawerWidth = 200;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nconst menulink = {\n  textDecorationLine: 'none',\n  color: '#444',\n  fontWeight: 'bold'\n}\n\n// ロード中表示のコンテキスト\nexport type NowLoadingContextType = {\n  isNowLoading: boolean;\n  setNowLoading: (isNowLoading: boolean) => void;\n}\nconst NowLoadingContext = React.createContext<NowLoadingContextType>({} as NowLoadingContextType);\nexport const useNowLoadingContext = ():NowLoadingContextType => {\n  return React.useContext<NowLoadingContextType>(NowLoadingContext);\n}\n\n// 設定のコンテキスト\nexport type SettingsContextType = {\n  settings: Settings | null;\n  setSettings: (settings: Settings) => void;\n}\nconst SettingsContext = React.createContext<SettingsContextType>({} as SettingsContextType);\nexport const useSettingsContext = ():SettingsContextType => {\n  return React.useContext<SettingsContextType>(SettingsContext);\n}\n\n// DID情報のコンテキスト\nexport type DidContextType = {\n  didModel: DidModel | null;\n  setDidModel: (didModel: DidModel) => void;\n}\nconst DidContext = React.createContext<DidContextType>({} as DidContextType);\nexport const useDidContext = ():DidContextType => {\n  return React.useContext<DidContextType>(DidContext);\n}\n\nexport const SideMenuLayout = () => {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [isNowLoading, setNowLoading] = React.useState(false);\n  const [settings, setSettings] = React.useState<Settings | null>(null);\n  const [didModel, setDidModel] = React.useState<DidModel | null>(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const nowLoadingValue: NowLoadingContextType = { isNowLoading, setNowLoading };\n  const settingsValue: SettingsContextType = { settings, setSettings };\n  const didValue: DidContextType = { didModel, setDidModel };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar sx={{minHeight: '40px'}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <IconMenu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ION PWA Sample\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <IconChevronLeft /> : <IconChevronRight />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n\n        <List>\n          <NavLink to='/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconHome /></ListItemIcon>\n              <ListItemText primary='トップ' />\n            </ListItem>\n          </NavLink>\n          <NavLink to='/did/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconKey /></ListItemIcon>\n              <ListItemText primary='DID詳細' />\n            </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <NavLink to='/settings/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconSettings /></ListItemIcon>\n              <ListItemText primary='設定' />\n            </ListItem>\n          </NavLink>\n        </List>\n\n      </Drawer>\n      <NowLoadingContext.Provider value={nowLoadingValue}>\n        <SettingsContext.Provider value={settingsValue}>\n          <DidContext.Provider value={didValue}>\n            <Main onClick={handleDrawerClose} sx={{height: '100vh', width: '100%', paddingX: '8px'}}>\n              <DrawerHeader sx={{minHeight: '40px'}} />\n              <Outlet />\n            </Main>\n            <Backdrop\n              sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n              open={nowLoadingValue.isNowLoading}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </DidContext.Provider>\n        </SettingsContext.Provider>\n      </NowLoadingContext.Provider>\n      <div id='SW-update-dialog'></div>\n    </Box>\n  );\n}\n","import { Dexie, Table } from 'dexie';\nimport JwkEs256k from '@decentralized-identity/ion-sdk/dist/lib/models/JwkEs256k'\n\nimport { DidModel, PrivateKeyModel } from './helpers/didTools';\n\n// スキーマの修正がある場合、この値を変更する必要あり\nconst SCHEMA_VERSION = 1\n\nexport class SettingsModel {\n  key: string;\n  value: any;\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  };\n\n  static KEYS = {\n    URL_OPERATION: 'URL_OPERATION',\n    URL_RESOLVE: 'URL_RESOLVE',\n  }\n};\n\nexport class DidInfoModel {\n  key: string;\n  didlong: string;\n  signingPrivateKey: JwkEs256k;\n  recoveryPrivateKey: JwkEs256k;\n  updatePrivateKey: JwkEs256k;\n  constructor(\n    key: string, \n    didlong: string,\n    signingPrivateKey: JwkEs256k,\n    recoveryPrivateKey: JwkEs256k,\n    updatePrivateKey: JwkEs256k\n    ) {\n    this.key = key;\n    this.didlong = didlong;\n    this.signingPrivateKey = signingPrivateKey;\n    this.recoveryPrivateKey = recoveryPrivateKey;\n    this.updatePrivateKey = updatePrivateKey;\n  };\n\n  static KEY = 'KEY';\n};\n\ninterface IonPwaDatabase extends Dexie {\n  settings: Table<SettingsModel, string>;\n  did: Table<DidModel, string>;\n  privatekey: Table<PrivateKeyModel, string>;\n};\nexport const dexieDb = new Dexie('ionpwa-db') as IonPwaDatabase;\n\ndexieDb.version(SCHEMA_VERSION).stores({\n  settings: 'key',\n  did: 'id',\n  privatekey: 'id',\n});","import { dexieDb, SettingsModel } from '../dexie';\n\nexport class Settings {\n  urlOperation: string;\n  urlResolve: string;\n\n  constructor(){\n    // デフォルト値\n    this.urlOperation = 'https://beta.ion.msidentity.com/api/v1.0/';\n    this.urlResolve = 'https://beta.discover.did.microsoft.com/1.0/';\n  }\n\n  async load() {\n    // indexedDBからLoad\n    const dbUrlOperation = await dexieDb.settings.get(SettingsModel.KEYS.URL_OPERATION);\n    if (dbUrlOperation) {\n      this.urlOperation = dbUrlOperation.value;\n    }\n    const dbUrlResolve = await dexieDb.settings.get(SettingsModel.KEYS.URL_RESOLVE);\n    if (dbUrlResolve) {\n      this.urlResolve = dbUrlResolve.value;\n    }\n  }\n\n  async save() {\n    // indexedDBにSave\n    await dexieDb.settings.put(new SettingsModel(SettingsModel.KEYS.URL_OPERATION, this.urlOperation));\n    await dexieDb.settings.put(new SettingsModel(SettingsModel.KEYS.URL_RESOLVE, this.urlResolve));\n  }\n\n  static async load() {\n    const settings = new Settings();\n    await settings.load();\n    return settings;\n  }\n}","import { IonDid, IonDocumentModel, IonKey, IonRequest } from '@decentralized-identity/ion-sdk';\nimport JwkEs256k from '@decentralized-identity/ion-sdk/dist/lib/models/JwkEs256k';\nimport IonProofOfWork from 'ion-pow-sdk';\nimport { dexieDb } from '../dexie';\nimport urljoin from 'url-join';\nimport { fetch } from 'cross-fetch';\n\nexport class DidTool {\n  static ACTION_PATH = {\n    OPERATIONS: 'operations',\n    IDENTIFIERS: 'identifiers',\n\n    PROOF: 'proof-of-work-challenge',\n  };\n\n  static async create(url: string, signingKeyId: string = 'signing-key') {\n    // 鍵生成\n    const [recoveryKey, recoveryPrivateKey] = await IonKey.generateEs256kOperationKeyPair();\n    const [updateKey, updatePrivateKey] = await IonKey.generateEs256kOperationKeyPair();\n    const [signingKey, signingPrivateKey] = await IonKey.generateEs256kDidDocumentKeyPair({id: signingKeyId});\n    const publicKeys = [signingKey];\n\n    // DID作成リクエスト\n    const document : IonDocumentModel = {\n      publicKeys\n    };\n    const input = { recoveryKey, updateKey, document };\n    const createRequest = IonRequest.createCreateRequest(input);\n    const longFormDid = IonDid.createLongFormDid(input);\n    const longFormSuffixData = longFormDid.substring(longFormDid.lastIndexOf(':') + 1);\n\n    const resText = await IonProofOfWork.submitIonRequest(\n      urljoin(url, DidTool.ACTION_PATH.PROOF),\n      urljoin(url, DidTool.ACTION_PATH.OPERATIONS),\n      JSON.stringify(createRequest)\n    );\n    if (!resText) {\n      return null;\n    };\n\n    // 各種パラメータ生成\n    const resObj = JSON.parse(resText);\n    const did: string = resObj.didDocument.id;\n    const didParts = did.split(':');\n    const scheme = didParts[0];\n    const didSuffix = didParts[didParts.length - 1];\n    let method = didParts[1];\n    if (didParts.length === 4) {\n      method +=  ':' +  didParts[2];\n    };\n    const published = resObj.didDocumentMetadata.method.published;\n\n    const didModel = new DidModel(\n      scheme,\n      method,\n      didSuffix,\n      longFormSuffixData,\n      signingKeyId,\n      published\n    );\n\n    return {\n      didModel: didModel,\n      signingPrivateKey: signingPrivateKey,\n      recoveryPrivateKey: recoveryPrivateKey,\n      updatePrivateKey: updatePrivateKey,\n    };\n  };\n\n  static async resolve(url: string, did: string) {\n    const res = await fetch(urljoin(url, DidTool.ACTION_PATH.IDENTIFIERS, did));\n    if (res.status !== 200) {\n      return {\n        error: {\n          status: res.status,\n          text: await res.text()\n        }\n      }\n    }\n    return await res.json();\n  }\n\n  static async save(didModel: DidModel) {\n    await dexieDb.did.put(didModel);\n  }\n\n  static async load() {\n    const didModel = await dexieDb.did.get(DidModel.ID);\n    if (didModel) {\n      return new DidModel(\n        didModel.scheme,\n        didModel.method,\n        didModel.didSuffix,\n        didModel.longFormSuffixData,\n        didModel.signingKeyId,\n        didModel.published\n      );\n    }\n    return null;\n  };\n};\n\nexport class PrivateKeyTool {\n  static RESERVE_ID = {\n    RECOVERY: '@RECOVERY',\n    UPDATE: '@UPDATE'\n  }\n\n  static async save(id: string, privateKey: JwkEs256k) {\n    await dexieDb.privatekey.put(new PrivateKeyModel(id, privateKey));\n  };\n  static async load(id: string) {\n    return await dexieDb.privatekey.get(id);\n  };\n};\n\nexport class DidModel {\n  // did = scheme:method:didSuffix:longFormSuffixData\n  id: string;\n  scheme: string;\n  method: string;\n  didSuffix: string;\n  longFormSuffixData: string;\n  signingKeyId: string;\n  published: boolean;\n\n  constructor(\n    scheme: string = '',\n    method: string = '',\n    didSuffix: string = '',\n    longFormSuffixData: string = '',\n    signingKeyId: string = DidModel.SIGNING_KEY,\n    published = false\n    ) {\n    this.id = DidModel.ID;\n    this.scheme = scheme;\n    this.method = method;\n    this.didSuffix = didSuffix;\n    this.longFormSuffixData = longFormSuffixData;\n    this.signingKeyId = signingKeyId;\n    this.published = published;\n  };\n\n  get did() {\n    return [this.scheme, this.method, this.didSuffix].join(':');\n  }\n\n  get didLong() {\n    return [this.scheme, this.method, this.didSuffix, this.longFormSuffixData].join(':');\n  }\n\n  static ID = 'onlyid';\n  static SIGNING_KEY = 'signing-key';\n};\n\nexport class PrivateKeyModel {\n  id: string;\n  privateKey: JwkEs256k;\n\n  constructor(id: string, privateKey: JwkEs256k) {\n    this.id = id;\n    this.privateKey = privateKey;\n  };\n};","import * as React from 'react';\nimport { Typography, Container, Grid, Button, Snackbar, Alert, \n  Card, CardContent, CardActions, TextField, Chip, \n  Dialog, DialogTitle, DialogContent, DialogActions, Divider} from '@mui/material';\nimport { \n  Create as IconCreate\n} from '@mui/icons-material'\n\nimport { Settings } from '../helpers/settings';\nimport { DidTool, PrivateKeyTool } from '../helpers/didTools';\nimport { useNowLoadingContext, useSettingsContext, useDidContext } from '../layout/sideMenuLayout';\n\nexport const PageTop = () => {\n  const nowLoadingContext = useNowLoadingContext();\n  const settingsContext = useSettingsContext();\n  const didContext = useDidContext();\n\n  const [openDidCreated, setOpenDidCreated] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [textDialog, setTextDialog] = React.useState({title:'', text:''});\n\n  const handleCloseDidCreated = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenDidCreated(false);\n  };\n\n  /**\n   * 各種読み込み\n   */\n  const setup = async () => {\n    nowLoadingContext.setNowLoading(true);\n\n    // 設定の読み込み\n    settingsContext.setSettings(await Settings.load());\n\n    // DIDの読み込み\n    const didModel = await DidTool.load();\n    if (didModel) {\n      didContext.setDidModel(didModel);\n    }\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n    }, 500);\n  };\n\n  React.useEffect(() => {\n    if (!settingsContext.settings) {\n      setup();\n    };\n  });\n\n  const registerDid = async () => {\n    if (!settingsContext.settings) {\n      return\n    }\n    nowLoadingContext.setNowLoading(true);\n    \n    // DID発行\n    const didInfo = await DidTool.create(settingsContext.settings.urlOperation);\n    \n    if (didInfo) {\n      // 発行した各種情報を保存\n      await PrivateKeyTool.save(didInfo.didModel.signingKeyId, didInfo.signingPrivateKey);\n      await PrivateKeyTool.save(PrivateKeyTool.RESERVE_ID.RECOVERY, didInfo.recoveryPrivateKey);\n      await PrivateKeyTool.save(PrivateKeyTool.RESERVE_ID.UPDATE, didInfo.updatePrivateKey);\n      await DidTool.save(didInfo.didModel);\n\n      // コンテキストにも反映\n      didContext.setDidModel(didInfo.didModel);\n    }\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n      setOpenDidCreated(true);\n    }, 500);\n  };\n\n  const resolveDid = async () => {\n    if (!didContext.didModel) {\n      return\n    }\n    return await _resolveDid(didContext.didModel.did);\n  };\n\n  const resolveDidLong = async () => {\n    if (!didContext.didModel) {\n      return\n    }\n    return await _resolveDid(didContext.didModel.didLong);\n  };\n\n  const _resolveDid = async (did: string) => {\n    if (!settingsContext.settings) {\n      return\n    }\n    if (!didContext.didModel) {\n      return\n    }\n    nowLoadingContext.setNowLoading(true);\n\n    const resolveDid = await DidTool.resolve(settingsContext.settings.urlResolve, did);\n    if (!resolveDid.error) {\n      if (!didContext.didModel.published) {\n        if (resolveDid.didDocumentMetadata.method.published) {\n          // publishedの更新\n          didContext.didModel.published = true;\n          didContext.setDidModel(didContext.didModel);\n          await DidTool.save(didContext.didModel);\n        }\n      }\n    }\n\n    setTimeout(() => {\n      setTextDialog({\n        title: 'DID検証レスポンス',\n        text: JSON.stringify(resolveDid, null, 2)\n      });\n      setOpenDialog(true);\n      nowLoadingContext.setNowLoading(false);\n    }, 500);\n  };\n\n  const closeDialog = async () => {\n    setOpenDialog(false);\n  };\n\n  if (!didContext.didModel) {\n    return (\n      <>\n        <Typography variant='h5'>\n          DID\n        </Typography>\n        <Container maxWidth='sm' sx={{marginTop: '16px'}}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              DIDが発行されていません。\n            </Grid>\n            <Grid container item xs={12} justifyContent='center'>\n              <Button variant='contained' size='large' startIcon={<IconCreate />} onClick={registerDid}>DID発行</Button>\n            </Grid>\n          </Grid>\n        </Container>\n        <Snackbar open={openDidCreated} autoHideDuration={6000} onClose={handleCloseDidCreated}>\n          <Alert onClose={handleCloseDidCreated} severity=\"success\" sx={{ width: '100%' }}>\n            DIDを発行しました。\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  }\n\n  const published = didContext.didModel.published ? <Chip label='公開済' color='success' /> : <Chip label='未公開' color='warning' />;\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          DID\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Card variant='outlined'>\n              <CardContent>\n                <TextField\n                  label='DID'\n                  fullWidth\n                  multiline\n                  value={didContext.didModel.did}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n                <Container fixed sx={{marginTop: '8px', textAlign: 'right'}} >\n                  {published}\n                </Container>\n              </CardContent>\n              <Divider sx={{marginX: '8px'}} />\n              <CardActions>\n                <Button size='small' onClick={resolveDid}>DIDを検証</Button>\n                <Button size='small' onClick={resolveDidLong}>DID(Long)を検証</Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      <Snackbar open={openDidCreated} autoHideDuration={6000} onClose={handleCloseDidCreated}>\n        <Alert onClose={handleCloseDidCreated} severity=\"success\" sx={{ width: '100%' }}>\n          DIDを発行しました。\n        </Alert>\n      </Snackbar>\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={openDialog}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {textDialog.title}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            label='DID'\n            fullWidth\n            multiline\n            maxRows={16}\n            value={textDialog.text}\n            InputProps={{\n              readOnly: true,\n              sx: {fontSize: '11px'}\n            }}\n            sx={{ marginTop: '8px' }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Typography, Container, TextField, Accordion, AccordionSummary, AccordionDetails} from '@mui/material';\nimport { \n  ExpandMore as IconExpandMore\n} from '@mui/icons-material'\nimport { useDidContext } from '../layout/sideMenuLayout';\nimport { PrivateKeyTool } from '../helpers/didTools';\n\nexport const PageDid = () => {\n  const didContext = useDidContext();\n  const [privateKeys, setPrivateKeys] = React.useState({signing:'', recovery:'', update:''});\n\n  const setup = async () => {\n    if (didContext.didModel) {\n      setPrivateKeys({\n        signing: JSON.stringify((await PrivateKeyTool.load(didContext.didModel.signingKeyId))?.privateKey, null, 2),\n        recovery: JSON.stringify((await PrivateKeyTool.load(PrivateKeyTool.RESERVE_ID.RECOVERY))?.privateKey, null, 2),\n        update: JSON.stringify((await PrivateKeyTool.load(PrivateKeyTool.RESERVE_ID.UPDATE))?.privateKey, null, 2)\n      });\n    };\n  };\n\n  React.useEffect(() => {\n    if (!privateKeys.signing) {\n      setup();\n    }\n  });\n\n  if (!didContext.didModel) {\n    return (<Navigate to=\"/\" replace />);\n  };\n\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          DID詳細\n        </Typography>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>DID(Long)</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='DID(Long)'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={didContext.didModel.didLong}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>SigningPrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='SigningPrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.signing}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>RecoveryPrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='RecoveryPrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.recovery}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>UpdatePrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='UpdatePrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.update}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        \n      </Container>\n    </>\n  );\n}","import * as React from 'react';\nimport { Typography, Container, Grid, Button, TextField, Snackbar, Alert } from '@mui/material';\nimport { Save as IconSave } from '@mui/icons-material'\n\nimport { Settings } from '../helpers/settings';\n\nexport const PageSettings = () => {\n  const [open, setOpen] = React.useState(false);\n  const [urlOperation, setUrlOperation] = React.useState('');\n  const [urlResolve, setUrlResolve] = React.useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.id) {\n      case 'url-operation':\n        setUrlOperation(() => e.target.value)\n        break;\n      case 'url-resolve':\n        setUrlResolve(() => e.target.value)\n        break;\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const saveSettings = async () => {\n    // 設定の保存\n    const settings = new Settings();\n    settings.urlOperation = urlOperation;\n    settings.urlResolve = urlResolve;\n    await settings.save();\n    \n    handleOpen();\n  };\n\n  React.useEffect(() => {\n    // 設定の読み込み\n    Settings.load().then((settings) => {\n      setUrlOperation(settings.urlOperation);\n      setUrlResolve(settings.urlResolve);\n    });\n  },[])\n\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          Settings\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField id='url-operation' fullWidth label='Operation URL' variant='outlined' value={urlOperation} onChange={handleChange} />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField id='url-resolve' fullWidth label='Resolve URL' variant='outlined' value={urlResolve} onChange={handleChange} />\n          </Grid>\n          <Grid item xs={8}>\n            <Button fullWidth variant='contained' startIcon={<IconSave />} onClick={saveSettings}>保存</Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button fullWidth variant='contained' color='error'>リセット</Button>\n          </Grid>\n        </Grid>\n      </Container>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n          設定を保存しました。\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport { SideMenuLayout } from './layout/sideMenuLayout';\nimport { PageTop } from './pages/top';\nimport { PageDid } from './pages/did'\nimport { PageSettings } from './pages/settings'\n\nconst App = () => {\n  return <BrowserRouter>\n    <Routes>\n      <Route element={<SideMenuLayout />}>\n        <Route index element={<PageTop />} />\n        <Route path='did' element={<PageDid />} />\n\n        <Route path='settings' element={<PageSettings />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          } else if (installingWorker.state === \"activated\") {\n            window.location.reload();\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { ServiceWorkerUpdateDialog } from './ServiceWorkerUpdateDialog';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n// serviceWorkerRegistration.register({\n//   onUpdate: registration => {\n//     if (registration.waiting) {\n//       ReactDOM.render(<ServiceWorkerUpdateDialog registration={registration} />, \n//         document.querySelector('.SW-update-dialog'));\n//     }\n//   }\n// });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}