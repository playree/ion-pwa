{"version":3,"sources":["layout/sideMenuLayout.tsx","dexie.ts","helpers/settings.ts","helpers/didTools.ts","pages/top.tsx","pages/qr.tsx","pages/did.tsx","pages/vc.tsx","pages/settings.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","ServiceWorkerUpdateDialog.tsx","index.tsx"],"names":["drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","menulink","textDecorationLine","color","fontWeight","NowLoadingContext","React","useNowLoadingContext","SettingsContext","useSettingsContext","DidContext","useDidContext","SideMenuLayout","useTheme","setOpen","isNowLoading","setNowLoading","settings","setSettings","handleDrawerClose","nowLoadingValue","settingsValue","didValue","didModel","setDidModel","Box","sx","CssBaseline","position","Toolbar","minHeight","IconButton","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","to","style","ListItem","button","ListItemIcon","minWidth","ListItemText","primary","fontSize","Provider","value","height","paddingX","Backdrop","zIndex","drawer","CircularProgress","className","SettingsModel","key","this","KEYS","URL_OPERATION","URL_RESOLVE","didlong","signingPrivateKey","recoveryPrivateKey","updatePrivateKey","KEY","dexieDb","Dexie","version","stores","did","privatekey","vc","Settings","urlOperation","urlResolve","get","dbUrlOperation","dbUrlResolve","put","load","clear","DidTool","url","keyid","signingKeyId","VerifiableTool","generateKid","IonKey","generateEs256kOperationKeyPair","recoveryKey","updateKey","generateEs256kDidDocumentKeyPair","id","signingKey","_key","publicKeyJwk","crv","kid","kty","use","x","y","purposes","IonPublicKeyPurpose","Authentication","input","document","publicKeys","createRequest","IonRequest","createCreateRequest","longFormDid","IonDid","createLongFormDid","longFormSuffixData","substring","lastIndexOf","IonProofOfWork","submitIonRequest","urljoin","ACTION_PATH","PROOF","OPERATIONS","JSON","stringify","resText","resObj","parse","didDocument","didParts","split","scheme","didSuffix","length","method","published","didDocumentMetadata","DidModel","fetch","IDENTIFIERS","res","status","text","error","json","ID","PrivateKeyTool","privateKey","PrivateKeyModel","RESERVE_ID","RECOVERY","UPDATE","SIGNING_KEY","join","VcModel","VcTool","toArray","jwsString","jwsParse","header","base64url","decode","payload","jws","jwk","sha256","createHash","jwkString","hash","update","digest","encode","toBase64","Date","toString","privateJwk","ES256K","sign","Error","publicJwk","verify","PageTop","nowLoadingContext","settingsContext","didContext","openDidCreated","setOpenDidCreated","openDialog","setOpenDialog","title","textDialog","setTextDialog","handleCloseDidCreated","event","reason","setup","setTimeout","registerDid","didInfo","save","resolveDid","_resolveDid","resolveDidLong","didLong","resolve","deleteDid","closeDialog","Container","maxWidth","marginBottom","Grid","container","item","xs","Button","size","startIcon","Snackbar","autoHideDuration","onClose","Alert","severity","Chip","label","Card","CardContent","TextField","fullWidth","multiline","InputProps","readOnly","fixed","marginTop","textAlign","marginX","CardActions","Dialog","DialogTitle","DialogContent","maxRows","DialogActions","autoFocus","PageQr","qrText","setQrText","inputText","setInputText","inputPin","setInputPin","credentialOffer","credentialIssuerUrl","vcProcess","setVcProcess","isFinished","setFinished","navigate","useNavigate","replace","handleChange","e","target","getCredentialOffer","parsed","QueryString","query","request_uri","response","body","jwt","decodeJWS","console","log","getVCExpert","resJson","token","manualInput","issueVc","requestUrl","manifestUrl","claims","vp_token","presentation_definition","input_descriptors","issuance","manifest","vcExpert","credentialIssuer","alert","addVC","credentialRequest","alg","typ","iss","aud","contract","iat","now","exp","sub_jwk","verificationMethod","sub","generateSub","jti","uuid","pin","generateHash","attestations","idTokens","id_token_hint","privateKeyModel","signJws","credentialRequestJws","mode","cache","qr","constraints","facingMode","onResult","result","getText","qrResult","wordWrap","qrRead","onChange","vcConfirm","bgcolor","CardHeader","avatar","Avatar","src","vcComp","PageDid","signing","recovery","privateKeys","setPrivateKeys","Accordion","AccordionSummary","expandIcon","AccordionDetails","PageVc","vcList","setVcList","all","items","cnt","push","PageSettings","setUrlOperation","setUrlResolve","handleClose","saveSettings","resetSettings","then","App","element","index","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","waiting","onUpdate","installingWorker","installing","onstatechange","state","controller","onSuccess","reload","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SWUpdateDialog","useState","show","setShow","DialogContentText","postMessage","type","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","querySelector"],"mappings":"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","file":"static/js/main.1a64f47e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Outlet } from 'react-router-dom'\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Drawer, CssBaseline, Toolbar, Typography, Divider, IconButton, \n  List, ListItem, ListItemIcon, ListItemText, Backdrop, CircularProgress} from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport { \n  Menu as IconMenu,\n  ChevronLeft as IconChevronLeft,\n  ChevronRight as IconChevronRight,\n  Home as IconHome,\n  QrCode as IconQrCode,\n  Key as IconKey,\n  CardMembership as IconCardMembership,\n  Settings as IconSettings,\n} from '@mui/icons-material';\nimport { NavLink } from 'react-router-dom';\n\nimport { Settings } from '../helpers/settings';\nimport { DidModel } from '../helpers/didTools';\n\nconst buildNo = '20220607.002';\nconst drawerWidth = 200;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nconst menulink = {\n  textDecorationLine: 'none',\n  color: '#444',\n  fontWeight: 'bold'\n}\n\n// ロード中表示のコンテキスト\nexport type NowLoadingContextType = {\n  isNowLoading: boolean;\n  setNowLoading: (isNowLoading: boolean) => void;\n}\nconst NowLoadingContext = React.createContext<NowLoadingContextType>({} as NowLoadingContextType);\nexport const useNowLoadingContext = ():NowLoadingContextType => {\n  return React.useContext<NowLoadingContextType>(NowLoadingContext);\n}\n\n// 設定のコンテキスト\nexport type SettingsContextType = {\n  settings: Settings | null;\n  setSettings: (settings: Settings) => void;\n}\nconst SettingsContext = React.createContext<SettingsContextType>({} as SettingsContextType);\nexport const useSettingsContext = ():SettingsContextType => {\n  return React.useContext<SettingsContextType>(SettingsContext);\n}\n\n// DID情報のコンテキスト\nexport type DidContextType = {\n  didModel: DidModel | null;\n  setDidModel: (didModel: DidModel | null) => void;\n}\nconst DidContext = React.createContext<DidContextType>({} as DidContextType);\nexport const useDidContext = ():DidContextType => {\n  return React.useContext<DidContextType>(DidContext);\n}\n\nexport const SideMenuLayout = () => {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [isNowLoading, setNowLoading] = React.useState(false);\n  const [settings, setSettings] = React.useState<Settings | null>(null);\n  const [didModel, setDidModel] = React.useState<DidModel | null>(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const nowLoadingValue: NowLoadingContextType = { isNowLoading, setNowLoading };\n  const settingsValue: SettingsContextType = { settings, setSettings };\n  const didValue: DidContextType = { didModel, setDidModel };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar sx={{minHeight: '40px'}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <IconMenu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ION PWA Sample\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <IconChevronLeft /> : <IconChevronRight />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n\n        <List>\n          <NavLink to='/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconHome /></ListItemIcon>\n              <ListItemText primary='トップ' />\n            </ListItem>\n          </NavLink>\n          <NavLink to='/qr/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconQrCode /></ListItemIcon>\n              <ListItemText primary='QR読み込み' />\n            </ListItem>\n          </NavLink>\n          <NavLink to='/did/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconKey /></ListItemIcon>\n              <ListItemText primary='DID詳細' />\n            </ListItem>\n          </NavLink>\n          <NavLink to='/vc/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconCardMembership /></ListItemIcon>\n              <ListItemText primary='VC一覧' />\n            </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <NavLink to='/settings/' style={menulink} onClick={handleDrawerClose}>\n            <ListItem button>\n              <ListItemIcon sx={{minWidth: '40px'}}><IconSettings /></ListItemIcon>\n              <ListItemText primary='設定' />\n            </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <ListItem sx={{fontSize: '14px', color: 'gray'}}>\n            build: {buildNo}\n          </ListItem>\n        </List>\n\n      </Drawer>\n      <NowLoadingContext.Provider value={nowLoadingValue}>\n        <SettingsContext.Provider value={settingsValue}>\n          <DidContext.Provider value={didValue}>\n            <Main onClick={handleDrawerClose} sx={{height: '100vh', width: '100%', paddingX: '8px'}}>\n              <DrawerHeader sx={{minHeight: '40px'}} />\n              <Outlet />\n            </Main>\n            <Backdrop\n              sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n              open={nowLoadingValue.isNowLoading}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </DidContext.Provider>\n        </SettingsContext.Provider>\n      </NowLoadingContext.Provider>\n      <div className=\"SW-update-dialog\"></div>\n    </Box>\n  );\n}\n","import { Dexie, Table } from 'dexie';\nimport JwkEs256k from '@decentralized-identity/ion-sdk/dist/lib/models/JwkEs256k'\n\nimport { DidModel, PrivateKeyModel, VcModel } from './helpers/didTools';\n\n// スキーマの修正がある場合、この値を変更する必要あり\nconst SCHEMA_VERSION = 2\n\nexport class SettingsModel {\n  key: string;\n  value: any;\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  };\n\n  static KEYS = {\n    URL_OPERATION: 'URL_OPERATION',\n    URL_RESOLVE: 'URL_RESOLVE',\n  }\n};\n\nexport class DidInfoModel {\n  key: string;\n  didlong: string;\n  signingPrivateKey: JwkEs256k;\n  recoveryPrivateKey: JwkEs256k;\n  updatePrivateKey: JwkEs256k;\n  constructor(\n    key: string, \n    didlong: string,\n    signingPrivateKey: JwkEs256k,\n    recoveryPrivateKey: JwkEs256k,\n    updatePrivateKey: JwkEs256k\n    ) {\n    this.key = key;\n    this.didlong = didlong;\n    this.signingPrivateKey = signingPrivateKey;\n    this.recoveryPrivateKey = recoveryPrivateKey;\n    this.updatePrivateKey = updatePrivateKey;\n  };\n\n  static KEY = 'KEY';\n};\n\ninterface IonPwaDatabase extends Dexie {\n  settings: Table<SettingsModel, string>;\n  did: Table<DidModel, string>;\n  privatekey: Table<PrivateKeyModel, string>;\n  vc: Table<VcModel, number>;\n};\nexport const dexieDb = new Dexie('ionpwa-db') as IonPwaDatabase;\n\ndexieDb.version(SCHEMA_VERSION).stores({\n  settings: 'key',\n  did: 'id',\n  privatekey: 'id',\n  vc: '++id',\n});","import { dexieDb, SettingsModel } from '../dexie';\n\nexport class Settings {\n  urlOperation: string;\n  urlResolve: string;\n\n  constructor(){\n    // デフォルト値\n    this.urlOperation = 'https://beta.ion.msidentity.com/api/v1.0/';\n    this.urlResolve = 'https://beta.discover.did.microsoft.com/1.0/';\n  }\n\n  async load() {\n    // indexedDBからLoad\n    const dbUrlOperation = await dexieDb.settings.get(SettingsModel.KEYS.URL_OPERATION);\n    if (dbUrlOperation) {\n      this.urlOperation = dbUrlOperation.value;\n    }\n    const dbUrlResolve = await dexieDb.settings.get(SettingsModel.KEYS.URL_RESOLVE);\n    if (dbUrlResolve) {\n      this.urlResolve = dbUrlResolve.value;\n    }\n  }\n\n  async save() {\n    // indexedDBにSave\n    await dexieDb.settings.put(new SettingsModel(SettingsModel.KEYS.URL_OPERATION, this.urlOperation));\n    await dexieDb.settings.put(new SettingsModel(SettingsModel.KEYS.URL_RESOLVE, this.urlResolve));\n  }\n\n  static async load() {\n    const settings = new Settings();\n    await settings.load();\n    return settings;\n  }\n\n  static async clear() {\n    await dexieDb.settings.clear();\n  }\n}","import { IonDid, IonDocumentModel, IonKey, IonRequest, IonPublicKeyPurpose } from '@decentralized-identity/ion-sdk';\nimport JwkEs256k from '@decentralized-identity/ion-sdk/dist/lib/models/JwkEs256k';\nimport IonProofOfWork from 'ion-pow-sdk';\nimport { dexieDb } from '../dexie';\nimport urljoin from 'url-join';\nimport { fetch } from 'cross-fetch';\nimport base64url from 'base64url';\nimport { createHash } from 'crypto';\nimport { ES256K } from '@transmute/did-key-secp256k1';\n\nexport class DidTool {\n  static ACTION_PATH = {\n    OPERATIONS: 'operations',\n    IDENTIFIERS: 'identifiers',\n\n    PROOF: 'proof-of-work-challenge',\n  };\n\n  static async create(url: string, keyid: string = '') {\n    const signingKeyId = keyid ? keyid : VerifiableTool.generateKid();\n\n    // 鍵生成\n    const [recoveryKey, recoveryPrivateKey] = await IonKey.generateEs256kOperationKeyPair();\n    const [updateKey, updatePrivateKey] = await IonKey.generateEs256kOperationKeyPair();\n    const [signingKey, signingPrivateKey] = await IonKey.generateEs256kDidDocumentKeyPair({id: signingKeyId});\n    \n    // 追加属性\n    const _key = signingKey.publicKeyJwk as JwkEs256k;\n    signingKey.publicKeyJwk = { \n      crv: _key.crv, \n      kid: signingKeyId,\n      kty: _key.kty, \n      use: 'sig',\n      x: _key.x,\n      y: _key.y \n    };\n    signingKey.purposes = [IonPublicKeyPurpose.Authentication];\n    const publicKeys = [signingKey];\n\n    // DID作成リクエスト\n    const document : IonDocumentModel = {\n      publicKeys\n    };\n    const input = { recoveryKey, updateKey, document };\n    const createRequest = IonRequest.createCreateRequest(input);\n    const longFormDid = IonDid.createLongFormDid(input);\n    const longFormSuffixData = longFormDid.substring(longFormDid.lastIndexOf(':') + 1);\n\n    const resText = await IonProofOfWork.submitIonRequest(\n      urljoin(url, DidTool.ACTION_PATH.PROOF),\n      urljoin(url, DidTool.ACTION_PATH.OPERATIONS),\n      JSON.stringify(createRequest)\n    );\n    if (!resText) {\n      return null;\n    };\n\n    // 各種パラメータ生成\n    const resObj = JSON.parse(resText);\n    const did: string = resObj.didDocument.id;\n    const didParts = did.split(':');\n    const scheme = didParts[0];\n    const didSuffix = didParts[didParts.length - 1];\n    let method = didParts[1];\n    if (didParts.length === 4) {\n      method +=  ':' +  didParts[2];\n    };\n    const published = resObj.didDocumentMetadata.method.published;\n\n    const didModel = new DidModel(\n      scheme,\n      method,\n      didSuffix,\n      longFormSuffixData,\n      signingKeyId,\n      published\n    );\n\n    return {\n      didModel: didModel,\n      signingPrivateKey: signingPrivateKey,\n      recoveryPrivateKey: recoveryPrivateKey,\n      updatePrivateKey: updatePrivateKey,\n    };\n  };\n\n  static async resolve(url: string, did: string) {\n    const res = await fetch(urljoin(url, DidTool.ACTION_PATH.IDENTIFIERS, did));\n    if (res.status !== 200) {\n      return {\n        error: {\n          status: res.status,\n          text: await res.text()\n        }\n      }\n    }\n    return await res.json();\n  }\n\n  static async save(didModel: DidModel) {\n    await dexieDb.did.put(didModel);\n  }\n\n  static async load() {\n    const didModel = await dexieDb.did.get(DidModel.ID);\n    if (didModel) {\n      return new DidModel(\n        didModel.scheme,\n        didModel.method,\n        didModel.didSuffix,\n        didModel.longFormSuffixData,\n        didModel.signingKeyId,\n        didModel.published\n      );\n    }\n    return null;\n  };\n\n  static async clear() {\n    await dexieDb.did.clear();\n  }\n};\n\nexport class PrivateKeyTool {\n  static RESERVE_ID = {\n    RECOVERY: '@RECOVERY',\n    UPDATE: '@UPDATE'\n  }\n\n  static async save(id: string, privateKey: JwkEs256k) {\n    await dexieDb.privatekey.put(new PrivateKeyModel(id, privateKey));\n  };\n  static async load(id: string) {\n    return await dexieDb.privatekey.get(id);\n  };\n  static async clear() {\n    await dexieDb.privatekey.clear();\n  }\n};\n\nexport class DidModel {\n  // did = scheme:method:didSuffix:longFormSuffixData\n  id: string;\n  scheme: string;\n  method: string;\n  didSuffix: string;\n  longFormSuffixData: string;\n  signingKeyId: string;\n  published: boolean;\n\n  constructor(\n    scheme: string = '',\n    method: string = '',\n    didSuffix: string = '',\n    longFormSuffixData: string = '',\n    signingKeyId: string = DidModel.SIGNING_KEY,\n    published = false\n    ) {\n    this.id = DidModel.ID;\n    this.scheme = scheme;\n    this.method = method;\n    this.didSuffix = didSuffix;\n    this.longFormSuffixData = longFormSuffixData;\n    this.signingKeyId = signingKeyId;\n    this.published = published;\n  };\n\n  get did() {\n    return [this.scheme, this.method, this.didSuffix].join(':');\n  }\n\n  get didLong() {\n    return [this.scheme, this.method, this.didSuffix, this.longFormSuffixData].join(':');\n  }\n\n  static ID = 'onlyid';\n  static SIGNING_KEY = 'signing-key';\n};\n\nexport class PrivateKeyModel {\n  id: string;\n  privateKey: JwkEs256k;\n\n  constructor(id: string, privateKey: JwkEs256k) {\n    this.id = id;\n    this.privateKey = privateKey;\n  };\n};\n\nexport class VcModel {\n  id: number | undefined;\n  vc: JWTObject;\n\n  constructor(vc: JWTObject) {\n    this.vc = vc;\n  };\n};\n\nexport class VcTool {\n  static async save(vc: JWTObject) {\n    await dexieDb.vc.put(new VcModel(vc));\n  };\n  static async all() {\n    return await dexieDb.vc.toArray();\n  };\n  static async clear() {\n    await dexieDb.vc.clear();\n  }\n};\n\nexport class VerifiableTool {\n  static decodeJWS(jwsString: string): JWTObject {\n    const jwsParse = jwsString.split('.');\n    return {\n      header: JSON.parse(base64url.decode(jwsParse[0])),\n      payload: JSON.parse(base64url.decode(jwsParse[1])),\n      jws: jwsString\n    };\n  };\n\n  static generateSub(jwk: any) {\n    const sha256 = createHash('sha256');\n    const jwkString = `{\"crv\":\"${jwk.crv}\",\"kty\":\"${jwk.kty}\",\"x\":\"${jwk.x}\",\"y\":\"${jwk.y}\"}`;\n    const hash = sha256.update(jwkString).digest();\n    return base64url.encode(hash);\n  };\n\n  static generateHash(text: any) {\n    const sha256 = createHash('sha256');\n    const hash = sha256.update(text).digest();\n    return base64url.toBase64(base64url.encode(hash));\n  };\n\n  static generateKid() {\n    const md5 = createHash('md5');\n    return md5.update(new Date().toString()).digest('hex');\n  }\n\n  static async signJws(header: any, payload: any, privateJwk: any){\n    switch(privateJwk.crv){\n      case 'secp256k1':\n        return ES256K.sign(payload, privateJwk, header);\n      default: throw new Error('Unsupported cryptographic type');\n    };\n  };\n\n  static async verifyJws(jws: string, publicJwk: any){\n    switch(publicJwk.crv){\n      case 'secp256k1':\n        return ES256K.verify(jws, publicJwk);\n      default: throw new Error('Unsupported cryptographic type');\n    };\n  };\n}\n\nexport type JWTObject = {\n  header: any,\n  payload: any,\n  jws: string,\n}\n","import * as React from 'react';\nimport { Typography, Container, Grid, Button, Snackbar, Alert, \n  Card, CardContent, CardActions, TextField, Chip, \n  Dialog, DialogTitle, DialogContent, DialogActions, Divider} from '@mui/material';\nimport { \n  Create as IconCreate\n} from '@mui/icons-material'\n\nimport { Settings } from '../helpers/settings';\nimport { DidTool, PrivateKeyTool } from '../helpers/didTools';\nimport { useNowLoadingContext, useSettingsContext, useDidContext } from '../layout/sideMenuLayout';\n\nexport const PageTop = () => {\n  const nowLoadingContext = useNowLoadingContext();\n  const settingsContext = useSettingsContext();\n  const didContext = useDidContext();\n\n  const [openDidCreated, setOpenDidCreated] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [textDialog, setTextDialog] = React.useState({title:'', text:''});\n\n  const handleCloseDidCreated = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenDidCreated(false);\n  };\n\n  /**\n   * 各種読み込み\n   */\n  const setup = async () => {\n    nowLoadingContext.setNowLoading(true);\n\n    // 設定の読み込み\n    settingsContext.setSettings(await Settings.load());\n\n    // DIDの読み込み\n    const didModel = await DidTool.load();\n    if (didModel) {\n      didContext.setDidModel(didModel);\n    }\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n    }, 300);\n  };\n\n  React.useEffect(() => {\n    if (!settingsContext.settings) {\n      setup();\n    };\n  });\n\n  const registerDid = async () => {\n    if (!settingsContext.settings) {\n      return\n    }\n    nowLoadingContext.setNowLoading(true);\n    \n    // DID発行\n    const didInfo = await DidTool.create(settingsContext.settings.urlOperation);\n    \n    if (didInfo) {\n      // 発行した各種情報を保存\n      await PrivateKeyTool.save(didInfo.didModel.signingKeyId, didInfo.signingPrivateKey);\n      await PrivateKeyTool.save(PrivateKeyTool.RESERVE_ID.RECOVERY, didInfo.recoveryPrivateKey);\n      await PrivateKeyTool.save(PrivateKeyTool.RESERVE_ID.UPDATE, didInfo.updatePrivateKey);\n      await DidTool.save(didInfo.didModel);\n\n      // コンテキストにも反映\n      didContext.setDidModel(didInfo.didModel);\n    }\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n      setOpenDidCreated(true);\n    }, 300);\n  };\n\n  const resolveDid = async () => {\n    if (!didContext.didModel) {\n      return\n    }\n    return await _resolveDid(didContext.didModel.did);\n  };\n\n  const resolveDidLong = async () => {\n    if (!didContext.didModel) {\n      return\n    }\n    return await _resolveDid(didContext.didModel.didLong);\n  };\n\n  const _resolveDid = async (did: string) => {\n    if (!settingsContext.settings) {\n      return\n    }\n    if (!didContext.didModel) {\n      return\n    }\n    nowLoadingContext.setNowLoading(true);\n\n    const resolveDid = await DidTool.resolve(settingsContext.settings.urlResolve, did);\n    if (!resolveDid.error) {\n      if (!didContext.didModel.published) {\n        if (resolveDid.didDocumentMetadata.method.published) {\n          // publishedの更新\n          didContext.didModel.published = true;\n          didContext.setDidModel(didContext.didModel);\n          await DidTool.save(didContext.didModel);\n        }\n      }\n    }\n\n    setTimeout(() => {\n      setTextDialog({\n        title: 'DID検証レスポンス',\n        text: JSON.stringify(resolveDid, null, 2)\n      });\n      setOpenDialog(true);\n      nowLoadingContext.setNowLoading(false);\n    }, 500);\n  };\n\n  const deleteDid = async () => {\n    nowLoadingContext.setNowLoading(true);\n\n    // 発行した各種情報を削除\n    await PrivateKeyTool.clear();\n    await DidTool.clear();\n\n    // コンテキストにも反映\n    didContext.setDidModel(null);\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n    }, 300);\n  };\n\n  const closeDialog = async () => {\n    setOpenDialog(false);\n  };\n\n  if (!didContext.didModel) {\n    return (\n      <>\n        <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n          <Typography variant='h5' sx={{marginBottom: '16px'}}>\n            DID\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              DIDが発行されていません。\n            </Grid>\n            <Grid container item xs={12} justifyContent='center'>\n              <Button variant='contained' size='large' startIcon={<IconCreate />} onClick={registerDid}>DID発行</Button>\n            </Grid>\n          </Grid>\n        </Container>\n        <Snackbar open={openDidCreated} autoHideDuration={6000} onClose={handleCloseDidCreated}>\n          <Alert onClose={handleCloseDidCreated} severity=\"success\" sx={{ width: '100%' }}>\n            DIDを発行しました。\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  }\n\n  const published = didContext.didModel.published ? <Chip label='公開済' color='success' /> : <Chip label='未公開' color='warning' />;\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          DID\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Card variant='outlined'>\n              <CardContent>\n                <TextField\n                  label='DID'\n                  fullWidth\n                  multiline\n                  value={didContext.didModel.did}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n                <Container fixed sx={{marginTop: '8px', textAlign: 'right'}} >\n                  {published}\n                </Container>\n              </CardContent>\n              <Divider sx={{marginX: '8px'}} />\n              <CardActions>\n                <Button size='small' onClick={resolveDid}>DIDを検証</Button>\n                <Button size='small' onClick={resolveDidLong}>DID(Long)を検証</Button>\n                <Button size='small' color='error' onClick={deleteDid}>削除</Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      <Snackbar open={openDidCreated} autoHideDuration={6000} onClose={handleCloseDidCreated}>\n        <Alert onClose={handleCloseDidCreated} severity=\"success\" sx={{ width: '100%' }}>\n          DIDを発行しました。\n        </Alert>\n      </Snackbar>\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={openDialog}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {textDialog.title}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            label='DID'\n            fullWidth\n            multiline\n            maxRows={16}\n            value={textDialog.text}\n            InputProps={{\n              readOnly: true,\n              sx: {fontSize: '11px'}\n            }}\n            sx={{ marginTop: '8px' }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import * as React from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { Typography, Container, Card, CardContent, CardHeader, Button, TextField, Avatar, Grid } from '@mui/material';\nimport { QrReader } from 'react-qr-reader';\nimport { fetch } from 'cross-fetch';\nimport * as QueryString from 'query-string';\nimport { VerifiableTool, DidTool, PrivateKeyTool, VcTool } from '../helpers/didTools';\nimport { useDidContext, useSettingsContext, useNowLoadingContext } from '../layout/sideMenuLayout';\nimport * as uuid from 'uuid';\n\nexport const PageQr = () => {\n  const [qrText, setQrText] = React.useState('');\n  const [inputText, setInputText] = React.useState('');\n  const [inputPin, setInputPin] = React.useState('');\n  const [vcProcess, setVcProcess] = React.useState({credentialOffer:{} as any, credentialIssuerUrl:''});\n  const [isFinished, setFinished] =  React.useState(false);\n  const didContext = useDidContext();\n  const settingsContext = useSettingsContext();\n  const nowLoadingContext = useNowLoadingContext();\n  const navigate = useNavigate();\n\n  if (!didContext.didModel) {\n    return (<Navigate to=\"/\" replace />);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.id) {\n      case 'input-text':\n        setInputText(() => e.target.value)\n        break;\n      case 'input-pin':\n        setInputPin(() => e.target.value)\n        break;\n    }\n  };\n\n  const getCredentialOffer = async (url: string) => {\n    const parsed = QueryString.parseUrl(url);\n    const response = await fetch(parsed.query.request_uri as string);\n    const body = await response.text();\n    const jwt = VerifiableTool.decodeJWS(body);\n    console.log(jwt);\n    return jwt;\n  };\n\n  const getVCExpert = async (url: string) => {\n    const response = await fetch(url);\n    const resJson = await response.json();\n    const jwt = VerifiableTool.decodeJWS(resJson.token);\n    console.log(jwt);\n    return jwt;\n  };\n\n  const manualInput = async () => {\n    issueVc(inputText);\n  };\n\n  const issueVc = async (requestUrl: string) => {\n    if (!settingsContext.settings) {\n      return\n    }\n    if (!didContext.didModel) {\n      return\n    }\n\n    try {\n      nowLoadingContext.setNowLoading(true);\n\n      // 1. オファーリクエストを取得(Issure→HolderへのSIOP Request)\n      const credentialOffer = await getCredentialOffer(requestUrl);\n\n      // 2. オファーリクエストの検証\n      const manifestUrl = credentialOffer.payload.claims.vp_token.presentation_definition.input_descriptors[0].issuance[0].manifest;\n      const vcExpert = await getVCExpert(manifestUrl);\n\n      // 情報を一時保存\n      setVcProcess({\n        credentialOffer: credentialOffer,\n        credentialIssuerUrl: vcExpert.payload.input.credentialIssuer\n      });\n    } catch (e) {\n      alert(e);\n    };\n\n    // ここで内容をユーザーに提示し、確認を行う\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n    }, 300);\n  }\n\n  const addVC = async () => {\n    // 3. レスポンス(Holder→IssureへのSIOP Response)\n    if (!settingsContext.settings) {\n      return\n    }\n    if (!didContext.didModel) {\n      return\n    }\n\n    try {\n      nowLoadingContext.setNowLoading(true);\n\n      // 未公開の場合はDID(Long)を使用\n      const did = didContext.didModel.published ? didContext.didModel.did : didContext.didModel.didLong;\n      \n      // 自身の公開鍵を取得\n      const didInfo = await DidTool.resolve(settingsContext.settings.urlResolve, did);\n\n      const credentialRequest = {\n        header: {\n          alg: 'ES256K',\n          typ: 'JWT',\n          kid: did + '#' + didContext.didModel.signingKeyId\n        },\n        payload: {\n          iss: 'https://self-issued.me',\n          // 一旦固定値\n          aud: 'https://beta.did.msidentity.com/v1.0/f55d947c-0f8e-48d7-b1ea-b7f5c99291ce/verifiableCredential/card/issue',\n          contract: 'https://beta.did.msidentity.com/v1.0/f55d947c-0f8e-48d7-b1ea-b7f5c99291ce/verifiableCredential/contracts/VerifiedCredentialExpert',\n          iat: Date.now(),\n          exp: Date.now() + 600,\n          sub_jwk: JSON.parse(JSON.stringify(didInfo.didDocument.verificationMethod[0].publicKeyJwk)),\n          sub: VerifiableTool.generateSub(didInfo.didDocument.verificationMethod[0].publicKeyJwk),\n          jti: uuid.v4(),\n          did: did,\n          pin: VerifiableTool.generateHash(inputPin),\n          attestations: {\n            idTokens: {\n              'https://self-issued.me': vcProcess.credentialOffer.payload.id_token_hint\n            }\n          }\n        }\n      };\n      console.log(credentialRequest);\n\n      // 秘密鍵で署名\n      const privateKeyModel = await PrivateKeyTool.load(didContext.didModel.signingKeyId);\n      const credentialRequestJws = await VerifiableTool.signJws(credentialRequest.header, credentialRequest.payload, privateKeyModel?.privateKey);\n      console.log(credentialRequestJws);\n\n      const response = await fetch(vcProcess.credentialIssuerUrl, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        body: credentialRequestJws,\n      });\n\n      const resJson = await response.json();\n      const jwt = VerifiableTool.decodeJWS(resJson.vc);\n      console.log(jwt);\n\n      // VCの保存\n      await VcTool.save(jwt);\n\n      setFinished(true);\n    } catch (e) {\n      alert(e);\n    };\n\n    setTimeout(() => {\n      nowLoadingContext.setNowLoading(false);\n    }, 300);\n  };\n\n  const qr = (\n    <QrReader\n      constraints={{ facingMode: 'environment' }}\n      onResult={(result) => {\n        if (result) {\n          console.log(result);\n          setQrText(result.getText());\n          issueVc(result.getText());\n        }\n      }}\n    />\n  );\n\n  const qrResult = (\n    <Card variant='outlined'>\n      <CardContent>\n        <Typography variant='h6'>\n          QR読み取り結果\n        </Typography>\n        <Typography sx={{wordWrap: 'break-word', marginTop: '16px'}}>\n          { qrText }\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n\n  const qrRead = (\n    <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n      <Typography variant='h5' sx={{marginBottom: '16px'}}>\n        QR読み取り\n      </Typography>\n      <Container maxWidth='sm'>\n        { !qrText && qr }\n        { qrText && qrResult }\n      </Container>\n      <Container maxWidth='sm' sx={{marginTop: '16px'}}>\n        <TextField id='input-text' label='URL(openid://vc/)' fullWidth multiline maxRows={6} size='small' value={inputText} onChange={handleChange} />\n        <Button variant='contained' sx={{marginTop: '8px'}} onClick={manualInput}>手入力</Button>\n      </Container>\n    </Container>\n  );\n\n  const vcConfirm = (\n    <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n      <Typography variant='h5' sx={{marginBottom: '16px'}}>\n        VC発行確認\n      </Typography>\n      <Card sx={{bgcolor: '#2E4053'}}>\n        <CardHeader \n        avatar={<Avatar src='https://didcustomerplayground.blob.core.windows.net/public/VerifiedCredentialExpert_icon.png' />}\n        title='Verified Credential Expert'\n        sx={{color: 'white'}}\n        />\n        <CardContent>\n          <Typography sx={{color: 'white'}}>\n            <br/>\n            Microsoft\n          </Typography>\n        </CardContent>\n      </Card>\n      <Typography sx={{marginTop: '16px'}}>Do you want to get your Verified Credential?</Typography>\n      <TextField id='input-pin' label='PIN' fullWidth sx={{marginTop: '16px'}} value={inputPin} onChange={handleChange} />\n      <Grid container spacing={2} sx={{marginTop: '16px'}}>\n        <Grid item xs={6}>\n          <Button variant='outlined' fullWidth onClick={() => navigate('/')}>キャンセル</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button variant='contained' fullWidth onClick={addVC}>追加</Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n\n  const vcComp = (\n    <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n      <Typography variant='h5' sx={{marginBottom: '16px'}}>\n        VC受け取り完了\n      </Typography>\n      <Typography>\n        VCをウォレットに登録しました。\n      </Typography>\n    </Container>\n  );\n\n  if (isFinished) {\n    return vcComp;\n  }\n\n  if (vcProcess.credentialIssuerUrl) {\n    return vcConfirm;\n  }\n\n  return qrRead;\n}","import * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Typography, Container, TextField, Accordion, AccordionSummary, AccordionDetails} from '@mui/material';\nimport { \n  ExpandMore as IconExpandMore\n} from '@mui/icons-material'\nimport { useDidContext } from '../layout/sideMenuLayout';\nimport { PrivateKeyTool } from '../helpers/didTools';\n\nexport const PageDid = () => {\n  const didContext = useDidContext();\n  const [privateKeys, setPrivateKeys] = React.useState({signing:'', recovery:'', update:''});\n\n  const setup = async () => {\n    if (didContext.didModel) {\n      setPrivateKeys({\n        signing: JSON.stringify((await PrivateKeyTool.load(didContext.didModel.signingKeyId))?.privateKey, null, 2),\n        recovery: JSON.stringify((await PrivateKeyTool.load(PrivateKeyTool.RESERVE_ID.RECOVERY))?.privateKey, null, 2),\n        update: JSON.stringify((await PrivateKeyTool.load(PrivateKeyTool.RESERVE_ID.UPDATE))?.privateKey, null, 2)\n      });\n    };\n  };\n\n  React.useEffect(() => {\n    if (!privateKeys.signing) {\n      setup();\n    }\n  });\n\n  if (!didContext.didModel) {\n    return (<Navigate to=\"/\" replace />);\n  };\n\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          DID詳細\n        </Typography>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>DID(Long)</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='DID(Long)'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={didContext.didModel.didLong}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>SigningPrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='SigningPrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.signing}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>RecoveryPrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='RecoveryPrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.recovery}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<IconExpandMore />}>\n            <Typography>UpdatePrivateKey</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label='UpdatePrivateKey'\n              fullWidth\n              multiline\n              maxRows={8}\n              value={privateKeys.update}\n              InputProps={{\n                readOnly: true,\n                sx: {fontSize: '12px'}\n              }}\n            />\n          </AccordionDetails>\n        </Accordion>\n        \n      </Container>\n    </>\n  );\n}","import * as React from 'react';\nimport { Typography, Container, TextField, Accordion, AccordionSummary, AccordionDetails} from '@mui/material';\nimport { \n  ExpandMore as IconExpandMore\n} from '@mui/icons-material'\nimport { VcModel, VcTool } from '../helpers/didTools';\n\nexport const PageVc = () => {\n  const [vcList, setVcList] = React.useState([] as VcModel[]);\n\n  const setup = async () => {\n    const vcList = await VcTool.all();\n    setVcList(vcList);\n  };\n\n  React.useEffect(() => {\n    if (!vcList.length) {\n      setup();\n    }\n  });\n\n  const items = [];\n  for (var cnt = 0; cnt < vcList.length; cnt++) {\n    items.push(\n      <Accordion>\n        <AccordionSummary expandIcon={<IconExpandMore />}>\n          <Typography>VC {cnt}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <TextField\n            label='vc'\n            fullWidth\n            multiline\n            maxRows={8}\n            value={JSON.stringify(vcList[cnt].vc.payload, null, 2)}\n            InputProps={{\n              readOnly: true,\n              sx: {fontSize: '12px'}\n            }}\n          />\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          VC一覧\n        </Typography>\n        { items }\n        \n      </Container>\n    </>\n  );\n}","import * as React from 'react';\nimport { Typography, Container, Grid, Button, TextField, Snackbar, Alert } from '@mui/material';\nimport { Save as IconSave } from '@mui/icons-material'\n\nimport { Settings } from '../helpers/settings';\n\nexport const PageSettings = () => {\n  const [open, setOpen] = React.useState(false);\n  const [urlOperation, setUrlOperation] = React.useState('');\n  const [urlResolve, setUrlResolve] = React.useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.id) {\n      case 'url-operation':\n        setUrlOperation(() => e.target.value)\n        break;\n      case 'url-resolve':\n        setUrlResolve(() => e.target.value)\n        break;\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const saveSettings = async () => {\n    // 設定の保存\n    const settings = new Settings();\n    settings.urlOperation = urlOperation;\n    settings.urlResolve = urlResolve;\n    await settings.save();\n    \n    handleOpen();\n  };\n\n  const resetSettings = async () => {\n    await Settings.clear();\n    const settings = new Settings();\n    setUrlOperation(settings.urlOperation);\n    setUrlResolve(settings.urlResolve);\n  };\n\n  React.useEffect(() => {\n    // 設定の読み込み\n    Settings.load().then((settings) => {\n      setUrlOperation(settings.urlOperation);\n      setUrlResolve(settings.urlResolve);\n    });\n  },[])\n\n  return (\n    <>\n      <Container maxWidth='sm' sx={{paddingX: '8px'}}>\n        <Typography variant='h5' sx={{marginBottom: '16px'}}>\n          Settings\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField id='url-operation' fullWidth label='Operation URL' variant='outlined' value={urlOperation} onChange={handleChange} />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField id='url-resolve' fullWidth label='Resolve URL' variant='outlined' value={urlResolve} onChange={handleChange} />\n          </Grid>\n          <Grid item xs={8}>\n            <Button fullWidth variant='contained' startIcon={<IconSave />} onClick={saveSettings}>保存</Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button fullWidth variant='contained' color='error' onClick={resetSettings}>リセット</Button>\n          </Grid>\n        </Grid>\n      </Container>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n          設定を保存しました。\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport { SideMenuLayout } from './layout/sideMenuLayout';\nimport { PageTop } from './pages/top';\nimport { PageQr } from './pages/qr';\nimport { PageDid } from './pages/did';\nimport { PageVc } from './pages/vc';\nimport { PageSettings } from './pages/settings';\n\nconst App = () => {\n  return <BrowserRouter>\n    <Routes>\n      <Route element={<SideMenuLayout />}>\n        <Route index element={<PageTop />} />\n        <Route path='qr' element={<PageQr />} />\n        <Route path='did' element={<PageDid />} />\n        <Route path='vc' element={<PageVc />} />\n\n        <Route path='settings' element={<PageSettings />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        // 以下3行を追加\n        if (registration.waiting && config && config.onUpdate) {\n          config.onUpdate(registration);\n        }\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          } else if (installingWorker.state === 'activated') {\n            window.location.reload();\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText} from '@mui/material';\n\nexport const SWUpdateDialog: React.FC<{ registration: ServiceWorkerRegistration }> = ({ registration }) => {\n  const [show, setShow] = useState(!!registration.waiting);\n  const handleUpdate = () => {\n    registration.waiting?.postMessage({ type: 'SKIP_WAITING' });\n    setShow(false);\n    //window.location.reload();\n  };\n\n  return (\n    <Dialog open={show}>\n      <DialogTitle style={{textAlign: \"center\"}}>\n        アップデート通知\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          新しいバージョンがリリースされました。\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions sx={{justifyContent: \"center\"}}>\n        <Button onClick={handleUpdate}>アップデート</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { SWUpdateDialog } from './ServiceWorkerUpdateDialog';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register({\n  onUpdate: registration => {\n    if (registration.waiting) {\n      ReactDOM.render(<SWUpdateDialog registration={registration} />, document.querySelector('.SW-update-dialog'));\n    }\n  },\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}